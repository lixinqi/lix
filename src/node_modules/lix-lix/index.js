
require('/lib/lix/__builtin__.js');
var defer_stack = [];
function chain_defer() {
	thisDefer(defer_stack)(function(){return;}, 0);
}
var _ret, _0, _1;
function _2(_cb, _step, _cont, _ret, cb_defer) {
	switch (_step) {
		case 0:
			_ret = L__add__("lixv03", "-lix")(function (_ret) {
				return _2(_cb, 1, true, _ret, function () {
					thisDefer(defer_stack, true)(function () {cb_defer && cb_defer();}, 0);
					cb_defer && cb_defer();
				}
				);
			}, 0, false, undefined, function () {
				thisDefer(defer_stack, true)(function () {cb_defer && cb_defer();}, 0);
				cb_defer && cb_defer();
			}
			);
		case 1:
			_0 = _ret;
		case 2:
			_ret = _require(require)(_0)(function (_ret) {
				return _2(_cb, 3, true, _ret, function () {
					thisDefer(defer_stack, true)(function () {cb_defer && cb_defer();}, 0);
					cb_defer && cb_defer();
				}
				);
			}, 0, false, undefined, function () {
				thisDefer(defer_stack, true)(function () {cb_defer && cb_defer();}, 0);
				cb_defer && cb_defer();
			}
			);
		case 3:
			_1 = _ret
		default:
	}
	thisDefer(defer_stack, false)(function () {
		_cb(_ret);
	}, 0);
	if (_cont) {
		_cb(_ret);
	} else {
		return _ret;
	}
};
module.exports = _2
