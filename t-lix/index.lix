#!/usr/bin/env lix

add2 := + __ 2
mul3 := * __ 3
# add2 __compose__ print | call 3 
# add2 << mul3 >> print | call 3 
print << (add2 >> mul3) | call 3 

flist := [arr]->{
	[append]->{
		i := 0
		while (i < arr.length) {
			arr.(i) append
			i = i + 1
		}
	}
}

sflist := [x]->{
	[append]->{
		x append
	}
}

compose := [f0 f1]->{
	[i]->{ i | f0 | f1 }
}

add := [x]->{
	[i]->{ i + x }
}

data := [append]->{
	'good' append
	'nice' append
}

(data
	| >>= ((+ __ '0') >> sflist)
	| >>= ((+ __ '1') >> sflist)
	| call print
)

# (data
# 	| __bind__ (+ __ '0' | compose sflist)
# 	| __bind__ (+ __ '1' | compose sflist)
# 	| call print
# 	)

df := [x]->{
	data
}

threeDf := df >>> df >>> df

# threeDf := df | __vcompose__ df | __vcompose__ df

threeDf call | call print

'end' print

# try call []->{
# 	0 call
# } []->{
# }

# try call []->{
# 
# 	'good' call
# } [e]->{
# 	'in catch' print
# 	e print
# }

# 'a' String.IsString | print
# 0 String.IsString | print
#

# MyObject := Object subclass [pub]->{
# 	pub.__init__ = []->{
# 		'good' print
# 	}
# }
# 
# MyObject new
# obj := MyObject new
# 
# obj is MyObject | print

# $a print
# $a print
# $a print
# $a print
# 
# # inc1 := + $Partial 1
# # inc2 := + $Partial 2
# # inc3 := inc1 $Compose inc2
# # 1 inc3 | print
# 
# ReadFile := [filename options]->{
# 	cc call [brk]->{
# 		filename $fs.ReadFileAsync options [err data]->{
# 			brk call data
# 		}
# 	}
# }
# 
# ./t.lix | $fs.ReadFileAsync 'utf-8' [err data]->{
# }

# ./t.lix | ReadFile 'utf-8' | print

# /tmp/a $fs.RenameAsync /tmp/a-back [err]->{
# 	err print
# }

# WriteFile := [filename data options]->{
# 	cc call [brk]->{
# 		filename $fs.WriteFileAsync data options [err data]->{
# 			brk call filename
# 		}
# 	}
# }
# 
# AppendFile := [filename data options]->{
# 	cc call [brk]->{
# 		filename $fs.AppendFileAsync data options [err]->{
# 			brk call filename
# 		}
# 	}
# }
# 
# 
# /tmp/a | WriteFile 'gooooooooooooood' | ReadFile 'utf-8' | print
# /tmp/a | AppendFile '\nnice' | ReadFile 'utf-8' | print
# 
# $a | print

# /etc/passwd $fs.ReadFile 'utf-8' | .1 | print
