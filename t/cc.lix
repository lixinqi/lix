#!/usr/local/bin/node ./lix.js

a := 3
while (a > 0) {
	a print
	a = a - 1
}

a := 3
if (a > (3 + 1 | - (2 - 1))) {
	'a > 3' print
} (a > (2 + 1 | - (2 - 1))) {
	'a > 2' print
} (a > (1 + 1 | - (2 - 1))) {
	'a > 1' print
} else {
	'others' print
}

good := 'nice'
/[good + ('a' + 'b') | + 'c'] print

obj := {
	.name "lixinqi"
	.hi (self)->{
		self.name print
	}
}


obj .hi
obj .name "good"
obj .hi

obj.hi = (self)->{
#	'Hi, I\' am ' + self.name | print
	['Hi, I\' am ' self.name] array_join '' | print
}

obj .hi


test := (i)->{
	i print
}

3 test

test call 3

test apply [3]

arr := [
	(1 + 2)
	(1 + (1 + 2))
	(1 + (1 + (1 + 2)))
	(1 + (1 + (1 + 2)) | * 4)
]

arr print

obj := {
	.name ("li" + "xin" | + 'qi')
	.age (1 + 2 | - 2 | + (3 * 4) | * 2)
}

obj print

obj.[("n" + "am" | + 'e')] print

a := 3
b := a + 3 | - 2 | * 4
b + 5 | print

3 print
