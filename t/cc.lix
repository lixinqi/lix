#!/usr/local/bin/node ./lix.js
Fiber := 'fibers' require 

cc := (proc)->{
	caller := Fiber.current
	proc call (i)->{
		caller .run i 
	}
	Fiber .yield
}

FiberProc := (fn)->{
	()->{
		fn call
		process .exit
	} | Fiber | .run
}

timeout := (ms fn)->{
	fn setTimeout ms
}

FiberProc call ()->{

	ret := cc call (brk)->{
		1 timeout ()->{
			'before' console.log
			cc call (bk)->{
				1 timeout ()->{
					'nested before' console.log
					'nice' bk
					'nested after' console.log
				}
			}
			'hello world' brk
			'after' console.log
		}
	}
	ret print
} 

'main exit' | print

