
require('/lib/lix/s_builtin_.js');
require.lixCache = {};
require.lixLoadingCache = {};
var Lrequire = _require(require);
var L__dirname = __dirname;
var L__filename = __filename;
;
function _5(s) {
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Ltrap(Lprint));
case 1:
s[3] = (function (Lxlist) {
var Larguments = arguments;
;
var _0, Lf;
function _7(s) {
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, LMinorArgs2Fn(Larguments));
case 1:
_0 = s[3];
case 2:
s[3] = Lf = _0;
case 3:
s[3] = (function (Lcb) {
var Larguments = arguments;
;
var _4;
function _9(s) {
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lcall(Lxlist, (function (Lx) {
var Larguments = arguments;
;
var _1, _3, _2;
function _12(s) {
switch (s[2]) {
case 0:
_1 = false;
case 1:
s[2] = 2;
lix(s, Lcb(Lx));
case 2:
_2 = s[3]
default:
}
return s[3]
}
;
function _11(s) {
switch (s[2]) {
case 0:
_1 = true;
case 1:
s[2] = 2;
lix(s, Lf(Lx));
case 2:
_3 = s[3];
case 3:
if ((_1 && _3)) {
s[2] = 4;
lix(s, _12)
}
default:
}
return s[3]
}
return _11;
})));
case 1:
_4 = s[3]
default:
}
return s[3]
}
return _9;
})
default:
}
return s[3]
}
return _7;
})
default:
}
return s[3]
}
;
;
module.exports = _5
