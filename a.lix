#!/usr/local/bin/lix

inc := (i)->{ i + 2 | - 1 }

3 inc | inc | print

# good
# nice
cons := (x y)->{ # nice

	(f)->{ x f y }

}

car := (f)->{
	(x y)->{ x } | f
}

cdr := (f)->{
	(x y)->{ y } | f
}

reverse := (f)->{
	(f cdr) cons (f car)
}

Y := (f)->{
	(x)->{
		(t)->{ t (x x) } | f
	} | (x)->{ x x }
}

seqPrint := (self)->{
	(i)->{
		i print
		if (i > 0) {
			i - 1 | self
		}
	}
} | Y

#3 cons 4 | reverse | cdr | print
