inc := (i)->{ i add 2 | sub 1 }
3 inc | inc | print

cons := (x y)->{
	(f)->{ x f y }
}

car := (f)->{
	(x y)->{ x } | f
}

cdr := (f)->{
	(x y)->{ y } | f
}

reverse := (f)->{
	(f cdr) cons (f car)
}

Y := (f)->{
	(x)->{
		(t)->{ t (x x) } | f
	} | (x)->{ x x }
}

seqPrint := (self)->{
	(i)->{
		i print
		i gt 0 | then ()->{
			i sub 1 | self
		}
	}
} | Y

3 cons 4 | reverse | cdr | print
