
require('/lib/lix/__builtin__.js');
var _ret, _0, _1, _6;
function _7(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__add__("timesRepeat", "-lix")(function (_ret) {
return _7(_cb, 1, true, _ret);
}, 0);
case 1:
_0 = _ret;
case 2:
_ret = require(_0)(function (_ret) {
return _7(_cb, 3, true, _ret);
}, 0);
case 3:
_1 = _ret;
case 4:
_ret = _1(10, (function () {
var Larguments = arguments;
var _ret, _2, _3, _4, _5;
function _9(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lprint('good')(function (_ret) {
return _9(_cb, 1, true, _ret);
}, 0);
case 1:
_2 = _ret;
case 2:
_ret = L__add__("sleep", "-lix")(function (_ret) {
return _9(_cb, 3, true, _ret);
}, 0);
case 3:
_3 = _ret;
case 4:
_ret = require(_3)(function (_ret) {
return _9(_cb, 5, true, _ret);
}, 0);
case 5:
_4 = _ret;
case 6:
_ret = Lcall(_4, 500)(function (_ret) {
return _9(_cb, 7, true, _ret);
}, 0);
case 7:
_5 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _9;
}))(function (_ret) {
return _7(_cb, 5, true, _ret);
}, 0);
case 5:
_6 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
module.exports = _7
