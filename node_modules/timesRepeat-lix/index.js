
require('/lib/lix/__builtin__.js');
;
function _3(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = (function (Lcount, Lcb) {
var Larguments = arguments;
var Li, _ret, _0, _1, _2;
function _6(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lcall(Lcb, Li)(function (_ret) {
return _6(_cb, 1, true, _ret);
}, 0);
case 1:
_1 = _ret;
case 2:
_ret = L__add__(Li, 1)(function (_ret) {
return _6(_cb, 3, true, _ret);
}, 0);
case 3:
_2 = _ret;
case 4:
_ret = Li = _2;
case 5:
_ret = L__lt__(Li, Lcount)(function (_ret) {
return _6(_cb, 6, true, _ret);
}, 0);
case 6:
_0 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
function _5(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Li = 0;
case 1:
_ret = L__lt__(Li, Lcount)(function (_ret) {
return _5(_cb, 2, true, _ret);
}, 0);
case 2:
_0 = _ret;
case 3:
while (_0) {
_6(function (_ret) {
return _5(_cb, 3, true, _ret);
}, 0)
}
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _5;
})
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
module.exports = _3
