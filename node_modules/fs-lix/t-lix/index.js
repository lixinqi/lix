
require('/lib/lix/__builtin__.js');
var _ret, _0, _1, _23;
function _24(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__add__("test", "-lix")(function (_ret) {
return _24(_cb, 1, true, _ret);
}, 0);
case 1:
_0 = _ret;
case 2:
_ret = require(_0)(function (_ret) {
return _24(_cb, 3, true, _ret);
}, 0);
case 3:
_1 = _ret;
case 4:
_ret = _1('$fs.ReadFileAsync', (function (Lassert) {
var Larguments = arguments;
var _ret, _2, _3, _8, _9, _10, _15, _16, _17, _22;
function _26(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__add__("fs", "-lix")(function (_ret) {
return _26(_cb, 1, true, _ret);
}, 0);
case 1:
_2 = _ret;
case 2:
_ret = require(_2)(function (_ret) {
return _26(_cb, 3, true, _ret);
}, 0);
case 3:
_3 = _ret;
case 4:
_ret = _3.ReadFileAsync(["/etc","/passwd"].join("/"), 'utf-8', (function (Lerr, Ldata) {
var Larguments = arguments;
var _ret, _4, _5, _6, _7;
function _28(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__eq__(Lerr, null)(function (_ret) {
return _28(_cb, 1, true, _ret);
}, 0);
case 1:
_4 = _ret;
case 2:
_ret = Lassert(_4)(function (_ret) {
return _28(_cb, 3, true, _ret);
}, 0);
case 3:
_5 = _ret;
case 4:
_ret = L__ne__(Ldata, null)(function (_ret) {
return _28(_cb, 5, true, _ret);
}, 0);
case 5:
_6 = _ret;
case 6:
_ret = Lassert(_6)(function (_ret) {
return _28(_cb, 7, true, _ret);
}, 0);
case 7:
_7 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _28;
}))(function (_ret) {
return _26(_cb, 5, true, _ret);
}, 0);
case 5:
_8 = _ret;
case 6:
_ret = L__add__("fs", "-lix")(function (_ret) {
return _26(_cb, 7, true, _ret);
}, 0);
case 7:
_9 = _ret;
case 8:
_ret = require(_9)(function (_ret) {
return _26(_cb, 9, true, _ret);
}, 0);
case 9:
_10 = _ret;
case 10:
_ret = _10.ReadFileAsync(["/etc","/passwd"].join("/"), (function (Lerr, Ldata) {
var Larguments = arguments;
var _ret, _11, _12, _13, _14;
function _30(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__eq__(Lerr, null)(function (_ret) {
return _30(_cb, 1, true, _ret);
}, 0);
case 1:
_11 = _ret;
case 2:
_ret = Lassert(_11)(function (_ret) {
return _30(_cb, 3, true, _ret);
}, 0);
case 3:
_12 = _ret;
case 4:
_ret = L__ne__(Ldata, null)(function (_ret) {
return _30(_cb, 5, true, _ret);
}, 0);
case 5:
_13 = _ret;
case 6:
_ret = Lassert(_13)(function (_ret) {
return _30(_cb, 7, true, _ret);
}, 0);
case 7:
_14 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _30;
}))(function (_ret) {
return _26(_cb, 11, true, _ret);
}, 0);
case 11:
_15 = _ret;
case 12:
_ret = L__add__("fs", "-lix")(function (_ret) {
return _26(_cb, 13, true, _ret);
}, 0);
case 13:
_16 = _ret;
case 14:
_ret = require(_16)(function (_ret) {
return _26(_cb, 15, true, _ret);
}, 0);
case 15:
_17 = _ret;
case 16:
_ret = _17.ReadFileAsync(["/this-is-not-dir","/1p29384-this-is-not-a-file"].join("/"), (function (Lerr, Ldata) {
var Larguments = arguments;
var _ret, _18, _19, _20, _21;
function _32(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__ne__(Lerr, null)(function (_ret) {
return _32(_cb, 1, true, _ret);
}, 0);
case 1:
_18 = _ret;
case 2:
_ret = Lassert(_18)(function (_ret) {
return _32(_cb, 3, true, _ret);
}, 0);
case 3:
_19 = _ret;
case 4:
_ret = L__eq__(Ldata, null)(function (_ret) {
return _32(_cb, 5, true, _ret);
}, 0);
case 5:
_20 = _ret;
case 6:
_ret = Lassert(_20)(function (_ret) {
return _32(_cb, 7, true, _ret);
}, 0);
case 7:
_21 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _32;
}))(function (_ret) {
return _26(_cb, 17, true, _ret);
}, 0);
case 17:
_22 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _26;
}))(function (_ret) {
return _24(_cb, 5, true, _ret);
}, 0);
case 5:
_23 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
try {
_24(function(x){return x;}, 0)
} catch (e) {
}