
require('/lib/lix/__builtin__.js');
var _ret, _0, _1, _23, _24, _25, _47;
function _48(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__add__("test", "-lix")(function (_ret) {
return _48(_cb, 1, true, _ret);
}, 0);
case 1:
_0 = _ret;
case 2:
_ret = require(_0)(function (_ret) {
return _48(_cb, 3, true, _ret);
}, 0);
case 3:
_1 = _ret;
case 4:
_ret = _1('$fs.ReadFileAsync', (function (Lassert) {
var Larguments = arguments;
var _ret, _2, _3, _8, _9, _10, _15, _16, _17, _22;
function _50(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__add__("fs", "-lix")(function (_ret) {
return _50(_cb, 1, true, _ret);
}, 0);
case 1:
_2 = _ret;
case 2:
_ret = require(_2)(function (_ret) {
return _50(_cb, 3, true, _ret);
}, 0);
case 3:
_3 = _ret;
case 4:
_ret = _3.ReadFileAsync(["/etc","/passwd"].join("/"), 'utf-8', (function (Lerr, Ldata) {
var Larguments = arguments;
var _ret, _4, _5, _6, _7;
function _52(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__eq__(Lerr, null)(function (_ret) {
return _52(_cb, 1, true, _ret);
}, 0);
case 1:
_4 = _ret;
case 2:
_ret = Lassert(_4)(function (_ret) {
return _52(_cb, 3, true, _ret);
}, 0);
case 3:
_5 = _ret;
case 4:
_ret = L__ne__(Ldata, null)(function (_ret) {
return _52(_cb, 5, true, _ret);
}, 0);
case 5:
_6 = _ret;
case 6:
_ret = Lassert(_6)(function (_ret) {
return _52(_cb, 7, true, _ret);
}, 0);
case 7:
_7 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _52;
}))(function (_ret) {
return _50(_cb, 5, true, _ret);
}, 0);
case 5:
_8 = _ret;
case 6:
_ret = L__add__("fs", "-lix")(function (_ret) {
return _50(_cb, 7, true, _ret);
}, 0);
case 7:
_9 = _ret;
case 8:
_ret = require(_9)(function (_ret) {
return _50(_cb, 9, true, _ret);
}, 0);
case 9:
_10 = _ret;
case 10:
_ret = _10.ReadFileAsync(["/etc","/passwd"].join("/"), (function (Lerr, Ldata) {
var Larguments = arguments;
var _ret, _11, _12, _13, _14;
function _54(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__eq__(Lerr, null)(function (_ret) {
return _54(_cb, 1, true, _ret);
}, 0);
case 1:
_11 = _ret;
case 2:
_ret = Lassert(_11)(function (_ret) {
return _54(_cb, 3, true, _ret);
}, 0);
case 3:
_12 = _ret;
case 4:
_ret = L__ne__(Ldata, null)(function (_ret) {
return _54(_cb, 5, true, _ret);
}, 0);
case 5:
_13 = _ret;
case 6:
_ret = Lassert(_13)(function (_ret) {
return _54(_cb, 7, true, _ret);
}, 0);
case 7:
_14 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _54;
}))(function (_ret) {
return _50(_cb, 11, true, _ret);
}, 0);
case 11:
_15 = _ret;
case 12:
_ret = L__add__("fs", "-lix")(function (_ret) {
return _50(_cb, 13, true, _ret);
}, 0);
case 13:
_16 = _ret;
case 14:
_ret = require(_16)(function (_ret) {
return _50(_cb, 15, true, _ret);
}, 0);
case 15:
_17 = _ret;
case 16:
_ret = _17.ReadFileAsync(["/this-is-not-dir","/1p29384-this-is-not-a-file"].join("/"), (function (Lerr, Ldata) {
var Larguments = arguments;
var _ret, _18, _19, _20, _21;
function _56(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__ne__(Lerr, null)(function (_ret) {
return _56(_cb, 1, true, _ret);
}, 0);
case 1:
_18 = _ret;
case 2:
_ret = Lassert(_18)(function (_ret) {
return _56(_cb, 3, true, _ret);
}, 0);
case 3:
_19 = _ret;
case 4:
_ret = L__eq__(Ldata, null)(function (_ret) {
return _56(_cb, 5, true, _ret);
}, 0);
case 5:
_20 = _ret;
case 6:
_ret = Lassert(_20)(function (_ret) {
return _56(_cb, 7, true, _ret);
}, 0);
case 7:
_21 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _56;
}))(function (_ret) {
return _50(_cb, 17, true, _ret);
}, 0);
case 17:
_22 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _50;
}))(function (_ret) {
return _48(_cb, 5, true, _ret);
}, 0);
case 5:
_23 = _ret;
case 6:
_ret = L__add__("test", "-lix")(function (_ret) {
return _48(_cb, 7, true, _ret);
}, 0);
case 7:
_24 = _ret;
case 8:
_ret = require(_24)(function (_ret) {
return _48(_cb, 9, true, _ret);
}, 0);
case 9:
_25 = _ret;
case 10:
_ret = _25('$fs.ReadFile', (function (Lassert) {
var Larguments = arguments;
var _ret, _26, _27, _28, Lret, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46;
function _58(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__add__("fs", "-lix")(function (_ret) {
return _58(_cb, 1, true, _ret);
}, 0);
case 1:
_26 = _ret;
case 2:
_ret = require(_26)(function (_ret) {
return _58(_cb, 3, true, _ret);
}, 0);
case 3:
_27 = _ret;
case 4:
_ret = _27.ReadFile(["/etc","/passwd"].join("/"), 'utf-8')(function (_ret) {
return _58(_cb, 5, true, _ret);
}, 0);
case 5:
_28 = _ret;
case 6:
_ret = Lret = _28;
case 7:
_ret = L__eq__(Lret[0], null)(function (_ret) {
return _58(_cb, 8, true, _ret);
}, 0);
case 8:
_29 = _ret;
case 9:
_ret = Lassert(_29)(function (_ret) {
return _58(_cb, 10, true, _ret);
}, 0);
case 10:
_30 = _ret;
case 11:
_ret = L__ne__(Lret[1], null)(function (_ret) {
return _58(_cb, 12, true, _ret);
}, 0);
case 12:
_31 = _ret;
case 13:
_ret = Lassert(_31)(function (_ret) {
return _58(_cb, 14, true, _ret);
}, 0);
case 14:
_32 = _ret;
case 15:
_ret = L__add__("fs", "-lix")(function (_ret) {
return _58(_cb, 16, true, _ret);
}, 0);
case 16:
_33 = _ret;
case 17:
_ret = require(_33)(function (_ret) {
return _58(_cb, 18, true, _ret);
}, 0);
case 18:
_34 = _ret;
case 19:
_ret = _34.ReadFile(["/etc","/passwd"].join("/"))(function (_ret) {
return _58(_cb, 20, true, _ret);
}, 0);
case 20:
_35 = _ret;
case 21:
_ret = Lret = _35;
case 22:
_ret = L__eq__(Lret[0], null)(function (_ret) {
return _58(_cb, 23, true, _ret);
}, 0);
case 23:
_36 = _ret;
case 24:
_ret = Lassert(_36)(function (_ret) {
return _58(_cb, 25, true, _ret);
}, 0);
case 25:
_37 = _ret;
case 26:
_ret = L__ne__(Lret[1], null)(function (_ret) {
return _58(_cb, 27, true, _ret);
}, 0);
case 27:
_38 = _ret;
case 28:
_ret = Lassert(_38)(function (_ret) {
return _58(_cb, 29, true, _ret);
}, 0);
case 29:
_39 = _ret;
case 30:
_ret = L__add__("fs", "-lix")(function (_ret) {
return _58(_cb, 31, true, _ret);
}, 0);
case 31:
_40 = _ret;
case 32:
_ret = require(_40)(function (_ret) {
return _58(_cb, 33, true, _ret);
}, 0);
case 33:
_41 = _ret;
case 34:
_ret = _41.ReadFileAsync(["/this-is-not-dir","/1p29384-this-is-not-a-file"].join("/"))(function (_ret) {
return _58(_cb, 35, true, _ret);
}, 0);
case 35:
_42 = _ret;
case 36:
_ret = Lret = _42;
case 37:
_ret = L__ne__(Lret[0], null)(function (_ret) {
return _58(_cb, 38, true, _ret);
}, 0);
case 38:
_43 = _ret;
case 39:
_ret = Lassert(_43)(function (_ret) {
return _58(_cb, 40, true, _ret);
}, 0);
case 40:
_44 = _ret;
case 41:
_ret = L__eq__(Lret[1], null)(function (_ret) {
return _58(_cb, 42, true, _ret);
}, 0);
case 42:
_45 = _ret;
case 43:
_ret = Lassert(_45)(function (_ret) {
return _58(_cb, 44, true, _ret);
}, 0);
case 44:
_46 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _58;
}))(function (_ret) {
return _48(_cb, 11, true, _ret);
}, 0);
case 11:
_47 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
try {
_48(function(x){return x;}, 0)
} catch (e) {
}