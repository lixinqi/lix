
require('/lib/lix/__builtin__.js');
var LgenerateCounter;
function _1(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = LgenerateCounter = (function () {
var Larguments = arguments;
var Lcounter;
function _3(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lcounter = 0;
case 1:
_ret = (function () {
var Larguments = arguments;
var Lret, _ret, _0;
function _5(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lret = Lcounter;
case 1:
_ret = L__add__(Lcounter, 1)(function (_ret) {
return _5(_cb, 2, true, _ret);
}, 0);
case 2:
_0 = _ret;
case 3:
_ret = Lcounter = _0;
case 4:
_ret = Lret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _5;
})
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _3;
});
case 1:
_ret = {
generator: LgenerateCounter
}
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
module.exports = _1
