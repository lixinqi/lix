
require('/lib/lix/__builtin__.js');
;
function _4(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = {
Compose: (function (Lf0, Lf1) {
var Larguments = arguments;
;
function _6(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = (function (Li) {
var Larguments = arguments;
var _ret, _0, _1;
function _8(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lf0(Li)(function (_ret) {
return _8(_cb, 1, true, _ret);
}, 0);
case 1:
_0 = _ret;
case 2:
_ret = Lf1(_0)(function (_ret) {
return _8(_cb, 3, true, _ret);
}, 0);
case 3:
_1 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _8;
})
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _6;
}),
Partial: (function (Lfn) {
var Larguments = arguments;
var _ret, _2, Largs;
function _10(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = LArray.Slice(Larguments, 0)(function (_ret) {
return _10(_cb, 1, true, _ret);
}, 0);
case 1:
_2 = _ret;
case 2:
_ret = Largs = _2;
case 3:
_ret = (function (Li) {
var Larguments = arguments;
var _ret, _3;
function _12(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Largs[0] = Li;
case 1:
_ret = Lapply(Lfn, Largs)(function (_ret) {
return _12(_cb, 2, true, _ret);
}, 0);
case 2:
_3 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _12;
})
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _10;
})
}
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
module.exports = _4

