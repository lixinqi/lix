
require('/lib/lix/__builtin__.js');
var _ret, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _11, _12, _13, _14, _22, _23, _24, _38, _39, _40, _41, _42;
function _43(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lprint('good')(function (_ret) {
return _43(_cb, 1, true, _ret);
}, 0);
case 1:
_0 = _ret;
case 2:
_ret = L__add__("trap", "-lix")(function (_ret) {
return _43(_cb, 3, true, _ret);
}, 0);
case 3:
_1 = _ret;
case 4:
_ret = _require(require)(_1)(function (_ret) {
return _43(_cb, 5, true, _ret);
}, 0);
case 5:
_2 = _ret;
case 6:
_ret = Lprint(_2)(function (_ret) {
return _43(_cb, 7, true, _ret);
}, 0);
case 7:
_3 = _ret;
case 8:
_ret = L__add__("trap", "-lix")(function (_ret) {
return _43(_cb, 9, true, _ret);
}, 0);
case 9:
_4 = _ret;
case 10:
_ret = _require(require)(_4)(function (_ret) {
return _43(_cb, 11, true, _ret);
}, 0);
case 11:
_5 = _ret;
case 12:
_ret = Lprint(_5)(function (_ret) {
return _43(_cb, 13, true, _ret);
}, 0);
case 13:
_6 = _ret;
case 14:
_ret = Lprint('nice')(function (_ret) {
return _43(_cb, 15, true, _ret);
}, 0);
case 15:
_7 = _ret;
case 16:
_ret = L__add__("trap", "-lix")(function (_ret) {
return _43(_cb, 17, true, _ret);
}, 0);
case 17:
_8 = _ret;
case 18:
_ret = _require(require)(_8)(function (_ret) {
return _43(_cb, 19, true, _ret);
}, 0);
case 19:
_9 = _ret;
case 20:
_ret = Lcall(_9.try, (function () {
var Larguments = arguments;
var _ret, _10;
function _45(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lprint('good')(function (_ret) {
return _45(_cb, 1, true, _ret);
}, 0);
case 1:
_10 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _45;
}), (function (Le) {
var Larguments = arguments;
;
function _47(_cb, _step, _cont, _ret) {
switch (_step) {

default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _47;
}))(function (_ret) {
return _43(_cb, 21, true, _ret);
}, 0);
case 21:
_11 = _ret;
case 22:
_ret = Lprint('nice')(function (_ret) {
return _43(_cb, 23, true, _ret);
}, 0);
case 23:
_12 = _ret;
case 24:
_ret = L__add__("trap", "-lix")(function (_ret) {
return _43(_cb, 25, true, _ret);
}, 0);
case 25:
_13 = _ret;
case 26:
_ret = _require(require)(_13)(function (_ret) {
return _43(_cb, 27, true, _ret);
}, 0);
case 27:
_14 = _ret;
case 28:
_ret = Lcall(_14.try, (function () {
var Larguments = arguments;
var _ret, _15, _16, _17, _18, _19;
function _49(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lprint('try begin')(function (_ret) {
return _49(_cb, 1, true, _ret);
}, 0);
case 1:
_15 = _ret;
case 2:
_ret = L__add__("trap", "-lix")(function (_ret) {
return _49(_cb, 3, true, _ret);
}, 0);
case 3:
_16 = _ret;
case 4:
_ret = _require(require)(_16)(function (_ret) {
return _49(_cb, 5, true, _ret);
}, 0);
case 5:
_17 = _ret;
case 6:
_ret = _17.raise('Error')(function (_ret) {
return _49(_cb, 7, true, _ret);
}, 0);
case 7:
_18 = _ret;
case 8:
_ret = Lprint('try end')(function (_ret) {
return _49(_cb, 9, true, _ret);
}, 0);
case 9:
_19 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _49;
}), (function (Le) {
var Larguments = arguments;
var _ret, _20, _21;
function _51(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lprint('Catch')(function (_ret) {
return _51(_cb, 1, true, _ret);
}, 0);
case 1:
_20 = _ret;
case 2:
_ret = Lprint(Le)(function (_ret) {
return _51(_cb, 3, true, _ret);
}, 0);
case 3:
_21 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _51;
}))(function (_ret) {
return _43(_cb, 29, true, _ret);
}, 0);
case 29:
_22 = _ret;
case 30:
_ret = L__add__("trap", "-lix")(function (_ret) {
return _43(_cb, 31, true, _ret);
}, 0);
case 31:
_23 = _ret;
case 32:
_ret = _require(require)(_23)(function (_ret) {
return _43(_cb, 33, true, _ret);
}, 0);
case 33:
_24 = _ret;
case 34:
_ret = Lcall(_24.try, (function () {
var Larguments = arguments;
var _ret, _25, _26, _35, _36;
function _53(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__add__("trap", "-lix")(function (_ret) {
return _53(_cb, 1, true, _ret);
}, 0);
case 1:
_25 = _ret;
case 2:
_ret = _require(require)(_25)(function (_ret) {
return _53(_cb, 3, true, _ret);
}, 0);
case 3:
_26 = _ret;
case 4:
_ret = Lcall(_26.try, (function () {
var Larguments = arguments;
var _ret, _27, _28, _29, _30;
function _55(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = L__add__("trap", "-lix")(function (_ret) {
return _55(_cb, 1, true, _ret);
}, 0);
case 1:
_27 = _ret;
case 2:
_ret = _require(require)(_27)(function (_ret) {
return _55(_cb, 3, true, _ret);
}, 0);
case 3:
_28 = _ret;
case 4:
_ret = _28.raise('Inner error in try block')(function (_ret) {
return _55(_cb, 5, true, _ret);
}, 0);
case 5:
_29 = _ret;
case 6:
_ret = Lprint('!!!!!!!!!!!!!!!! impossable to run here')(function (_ret) {
return _55(_cb, 7, true, _ret);
}, 0);
case 7:
_30 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _55;
}), (function (Le) {
var Larguments = arguments;
var _ret, _31, _32, _33, _34;
function _57(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lprint(Le)(function (_ret) {
return _57(_cb, 1, true, _ret);
}, 0);
case 1:
_31 = _ret;
case 2:
_ret = L__add__("trap", "-lix")(function (_ret) {
return _57(_cb, 3, true, _ret);
}, 0);
case 3:
_32 = _ret;
case 4:
_ret = _require(require)(_32)(function (_ret) {
return _57(_cb, 5, true, _ret);
}, 0);
case 5:
_33 = _ret;
case 6:
_ret = _33.raise('Outer error in catch block')(function (_ret) {
return _57(_cb, 7, true, _ret);
}, 0);
case 7:
_34 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _57;
}))(function (_ret) {
return _53(_cb, 5, true, _ret);
}, 0);
case 5:
_35 = _ret;
case 6:
_ret = Lprint('!!!!!!!!!!!!!!!! impossable to run here')(function (_ret) {
return _53(_cb, 7, true, _ret);
}, 0);
case 7:
_36 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _53;
}), (function (Le) {
var Larguments = arguments;
var _ret, _37;
function _59(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lprint(Le)(function (_ret) {
return _59(_cb, 1, true, _ret);
}, 0);
case 1:
_37 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _59;
}))(function (_ret) {
return _43(_cb, 35, true, _ret);
}, 0);
case 35:
_38 = _ret;
case 36:
_ret = L__add__("a", "-lix")(function (_ret) {
return _43(_cb, 37, true, _ret);
}, 0);
case 37:
_39 = _ret;
case 38:
_ret = _require(require)(_39)(function (_ret) {
return _43(_cb, 39, true, _ret);
}, 0);
case 39:
_40 = _ret;
case 40:
_ret = Lcall(_40)(function (_ret) {
return _43(_cb, 41, true, _ret);
}, 0);
case 41:
_41 = _ret;
case 42:
_ret = Lprint('end')(function (_ret) {
return _43(_cb, 43, true, _ret);
}, 0);
case 43:
_42 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
module.exports = _43
