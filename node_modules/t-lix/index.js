
require('/lib/lix/s_builtin_.js');
require.lixCache = {};
require.lixLoadingCache = {};
var LRequire = _require(require);
var LnaturalNumbers, Lexec, LMinorArgsToFunc, Lfilter, Lthen, Luntil, Leach, Lreduce, Lsquare, L_1class, Larray_monad, Lclass_each_student, _33, _34, _35, _36, _37, _38, Lclass_each_total_age, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, Lclass_each_total_age_print, _51, _52, _53, _54, _55, _56, _57, _58, Leach_total_age, _59, _60, _61, _62, _63, _64, _65, _66, _68, _69, _71, _72, _73, _74, _75, _76, Lconcat, _78, _79, _80, _81, _82;
function _83(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[3] = LnaturalNumbers = (function (Lcb) {
var Larguments = arguments
var Li, _0, _1;
function _86(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lcb(Li));
case 1:
_0 = s[3];
case 2:
s[2] = 3;
lix(s, L__add__(Li, 1));
case 3:
_1 = s[3];
case 4:
s[3] = Li = _1
default:
}
return s[3]
}
;
function _85(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[3] = Li = 0;
case 1:
while (1) {
s[2] = 1;
lix(s, _86)
}
default:
}
return s[3]
}
;
return _85;
});
case 1:
s[3] = Lexec = Lcall;
case 2:
s[3] = LMinorArgsToFunc = (function (Largs) {
var Larguments = arguments
var _2, Largs, _3;
function _88(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, LArray.Slice(Largs));
case 1:
_2 = s[3];
case 2:
s[3] = Largs = _2;
case 3:
s[3] = Largs[0] = L__;
case 4:
s[2] = 5;
lix(s, Lapply(Lcall, Largs));
case 5:
_3 = s[3]
default:
}
return s[3]
}
;
return _88;
});
case 3:
s[3] = Lfilter = (function (Lmonad) {
var Larguments = arguments
var _4, Lfn;
function _90(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, LMinorArgsToFunc(Larguments));
case 1:
_4 = s[3];
case 2:
s[3] = Lfn = _4;
case 3:
s[3] = (function (Lcb) {
var Larguments = arguments
var _8;
function _92(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lcall(Lmonad, (function (Lx) {
var Larguments = arguments
var _5, _7, _6;
function _95(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
_5 = false;
case 1:
s[2] = 2;
lix(s, Lcb(Lx));
case 2:
_6 = s[3]
default:
}
return s[3]
}
;
function _94(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
_5 = true;
case 1:
s[2] = 2;
lix(s, Lfn(Lx));
case 2:
_7 = s[3];
case 3:
if ((_5 && _7)) {
s[2] = 4;
lix(s, _95)
}
default:
}
return s[3]
}
;
return _94;
})));
case 1:
_8 = s[3]
default:
}
return s[3]
}
;
return _92;
})
default:
}
return s[3]
}
;
return _90;
});
case 4:
s[3] = Lthen = (function (Lmonad) {
var Larguments = arguments
var _9, Lfn;
function _97(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, LMinorArgsToFunc(Larguments));
case 1:
_9 = s[3];
case 2:
s[3] = Lfn = _9;
case 3:
s[3] = (function (Lcb) {
var Larguments = arguments
var _12;
function _99(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lcall(Lmonad, (function (Lx) {
var Larguments = arguments
var _10, _11;
function _101(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lfn(Lx));
case 1:
_10 = s[3];
case 2:
s[2] = 3;
lix(s, Lcb(Lx));
case 3:
_11 = s[3]
default:
}
return s[3]
}
;
return _101;
})));
case 1:
_12 = s[3]
default:
}
return s[3]
}
;
return _99;
})
default:
}
return s[3]
}
;
return _97;
});
case 5:
s[3] = Luntil = (function (Lmonad) {
var Larguments = arguments
var _13, Lfn;
function _103(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, LMinorArgsToFunc(Larguments));
case 1:
_13 = s[3];
case 2:
s[3] = Lfn = _13;
case 3:
s[3] = (function (Lcb) {
var Larguments = arguments
var _20;
function _105(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lcall(Lcc, (function (Lbrk) {
var Larguments = arguments
var _18, _19;
function _107(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lcall(Lmonad, (function (Lx) {
var Larguments = arguments
var _14, _16, _15, _17;
function _110(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
_14 = false;
case 1:
s[2] = 2;
lix(s, Lcall(Lbrk));
case 2:
_15 = s[3]
default:
}
return s[3]
}
;
function _109(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
_14 = true;
case 1:
s[2] = 2;
lix(s, Lfn(Lx));
case 2:
_16 = s[3];
case 3:
if ((_14 && _16)) {
s[2] = 4;
lix(s, _110)
};
case 4:
s[2] = 5;
lix(s, Lcb(Lx));
case 5:
_17 = s[3]
default:
}
return s[3]
}
;
return _109;
})));
case 1:
_18 = s[3];
case 2:
s[2] = 3;
lix(s, Lcall(Lbrk));
case 3:
_19 = s[3]
default:
}
return s[3]
}
;
return _107;
})));
case 1:
_20 = s[3]
default:
}
return s[3]
}
;
return _105;
})
default:
}
return s[3]
}
;
return _103;
});
case 6:
s[3] = Leach = (function (Lx) {
var Larguments = arguments
var _21, _22, _23, _24;
function _112(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lrequire("I"));
case 1:
_21 = s[3];
case 2:
s[2] = 3;
lix(s, LMinorArgsToFunc(Larguments));
case 3:
_22 = s[3];
case 4:
s[2] = 5;
lix(s, L__rcompose__(_21, _22));
case 5:
_23 = s[3];
case 6:
s[2] = 7;
lix(s, L__bind__(Lx, _23));
case 7:
_24 = s[3]
default:
}
return s[3]
}
;
return _112;
});
case 7:
s[3] = Lreduce = (function (Lmonad, Lacc, Linit) {
var Larguments = arguments
;
function _114(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[3] = (function (Lcb) {
var Larguments = arguments
var Lret, _26, _27, _28;
function _116(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[3] = Lret = Linit;
case 1:
s[2] = 2;
lix(s, Leach(Lmonad, (function (Li) {
var Larguments = arguments
var _25;
function _118(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lacc(Lret, Li));
case 1:
_25 = s[3];
case 2:
s[3] = Lret = _25
default:
}
return s[3]
}
;
return _118;
})));
case 2:
_26 = s[3];
case 3:
s[2] = 4;
lix(s, Lexec(_26));
case 4:
_27 = s[3];
case 5:
s[2] = 6;
lix(s, Lcb(Lret));
case 6:
_28 = s[3]
default:
}
return s[3]
}
;
return _116;
})
default:
}
return s[3]
}
;
return _114;
});
case 8:
s[3] = Lsquare = (function (Lx) {
var Larguments = arguments
var _29;
function _120(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, L__mul__(Lx, Lx));
case 1:
_29 = s[3]
default:
}
return s[3]
}
;
return _120;
});
case 9:
s[3] = L_1class = [{
ID: 119,
age: 26,
name: '李新奇'
}, {
ID: 110,
age: 18,
name: '李明超'
}];
case 10:
s[3] = Larray_monad = (function (Larr) {
var Larguments = arguments
;
function _122(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[3] = (function (Lcb) {
var Larguments = arguments
var Li, _30, _31, _32;
function _125(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lcb(Larr[Li]));
case 1:
_31 = s[3];
case 2:
s[2] = 3;
lix(s, L__add__(Li, 1));
case 3:
_32 = s[3];
case 4:
s[3] = Li = _32;
case 5:
s[2] = 6;
lix(s, L__lt__(Li, Larr.length));
case 6:
_30 = s[3]
default:
}
return s[3]
}
;
function _124(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[3] = Li = 0;
case 1:
s[2] = 2;
lix(s, L__lt__(Li, Larr.length));
case 2:
_30 = s[3];
case 3:
while (_30) {
s[2] = 3;
lix(s, _125)
}
default:
}
return s[3]
}
;
return _124;
})
default:
}
return s[3]
}
;
return _122;
});
case 11:
s[3] = Lclass_each_student = Larray_monad;
case 12:
s[2] = 13;
lix(s, L__(L__add__, 10));
case 13:
_33 = s[3];
case 14:
s[2] = 15;
lix(s, L__compose__((function (_126, _127) {
if (typeof _126.age === 'function') {
arguments = Array.prototype.slice.call(arguments, 0, arguments.length);
return _126.age.apply(_126, arguments);
} else if (_126.age !== undefined) {
if (_127 === undefined) {
return function (_ret) {
return _126.age;
}
}
return function (_ret) {
_126.age = _127;
}
}}), _33));
case 15:
_34 = s[3];
case 16:
s[2] = 17;
lix(s, L__(L__mul__, 100));
case 17:
_35 = s[3];
case 18:
s[2] = 19;
lix(s, L__compose__(_34, _35));
case 19:
_36 = s[3];
case 20:
s[2] = 21;
lix(s, L__(Leach, _36));
case 21:
_37 = s[3];
case 22:
s[2] = 23;
lix(s, L__compose__(Lclass_each_student, _37));
case 23:
_38 = s[3];
case 24:
s[3] = Lclass_each_total_age = _38;
case 25:
s[2] = 26;
lix(s, Lclass_each_student(L_1class));
case 26:
_39 = s[3];
case 27:
s[2] = 28;
lix(s, L__(L__add__, 10));
case 28:
_40 = s[3];
case 29:
s[2] = 30;
lix(s, L__compose__((function (_129, _130) {
if (typeof _129.age === 'function') {
arguments = Array.prototype.slice.call(arguments, 0, arguments.length);
return _129.age.apply(_129, arguments);
} else if (_129.age !== undefined) {
if (_130 === undefined) {
return function (_ret) {
return _129.age;
}
}
return function (_ret) {
_129.age = _130;
}
}}), _40));
case 30:
_41 = s[3];
case 31:
s[2] = 32;
lix(s, L__(L__mul__, 100));
case 32:
_42 = s[3];
case 33:
s[2] = 34;
lix(s, L__compose__(_41, _42));
case 34:
_43 = s[3];
case 35:
s[2] = 36;
lix(s, Leach(_39, _43));
case 36:
_44 = s[3];
case 37:
s[2] = 38;
lix(s, Lthen(_44, Lprint));
case 38:
_45 = s[3];
case 39:
s[2] = 40;
lix(s, Lexec(_45));
case 40:
_46 = s[3];
case 41:
s[2] = 42;
lix(s, Lclass_each_total_age(L_1class));
case 42:
_47 = s[3];
case 43:
s[2] = 44;
lix(s, Lcall(_47, Lprint));
case 44:
_48 = s[3];
case 45:
s[2] = 46;
lix(s, L__(Lthen, Lprint));
case 46:
_49 = s[3];
case 47:
s[2] = 48;
lix(s, L__compose__(Lclass_each_total_age, _49));
case 48:
_50 = s[3];
case 49:
s[3] = Lclass_each_total_age_print = _50;
case 50:
s[2] = 51;
lix(s, Lclass_each_total_age_print(L_1class));
case 51:
_51 = s[3];
case 52:
s[2] = 53;
lix(s, Lexec(_51));
case 53:
_52 = s[3];
case 54:
s[2] = 55;
lix(s, Lrequire("I"));
case 55:
_53 = s[3];
case 56:
s[2] = 57;
lix(s, L__(L__add__, 10));
case 57:
_54 = s[3];
case 58:
s[2] = 59;
lix(s, L__compose__((function (_132, _133) {
if (typeof _132.age === 'function') {
arguments = Array.prototype.slice.call(arguments, 0, arguments.length);
return _132.age.apply(_132, arguments);
} else if (_132.age !== undefined) {
if (_133 === undefined) {
return function (_ret) {
return _132.age;
}
}
return function (_ret) {
_132.age = _133;
}
}}), _54));
case 59:
_55 = s[3];
case 60:
s[2] = 61;
lix(s, L__(L__mul__, 100));
case 61:
_56 = s[3];
case 62:
s[2] = 63;
lix(s, L__compose__(_55, _56));
case 63:
_57 = s[3];
case 64:
s[2] = 65;
lix(s, L__rcompose__(_53, _57));
case 65:
_58 = s[3];
case 66:
s[3] = Leach_total_age = _58;
case 67:
s[2] = 68;
lix(s, Lprint('---------'));
case 68:
_59 = s[3];
case 69:
s[2] = 70;
lix(s, L__vcompose__(Lclass_each_student, Leach_total_age));
case 70:
_60 = s[3];
case 71:
s[2] = 72;
lix(s, _60(L_1class));
case 72:
_61 = s[3];
case 73:
s[2] = 74;
lix(s, Lthen(_61, Lprint));
case 74:
_62 = s[3];
case 75:
s[2] = 76;
lix(s, Lexec(_62));
case 76:
_63 = s[3];
case 77:
s[2] = 78;
lix(s, Lprint('---------'));
case 78:
_64 = s[3];
case 79:
s[2] = 80;
lix(s, Lrequire("I"));
case 80:
_65 = s[3];
case 81:
s[2] = 82;
lix(s, _65(1));
case 82:
_66 = s[3];
case 83:
s[2] = 84;
lix(s, Lthen(_66, (function () {
var Larguments = arguments
var _67;
function _136(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lprint('good0'));
case 1:
_67 = s[3]
default:
}
return s[3]
}
;
return _136;
})));
case 84:
_68 = s[3];
case 85:
s[2] = 86;
lix(s, Lfilter(_68, L__gt__, 1));
case 86:
_69 = s[3];
case 87:
s[2] = 88;
lix(s, Lthen(_69, (function () {
var Larguments = arguments
var _70;
function _138(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lprint('good1'));
case 1:
_70 = s[3]
default:
}
return s[3]
}
;
return _138;
})));
case 88:
_71 = s[3];
case 89:
s[2] = 90;
lix(s, Lexec(_71));
case 90:
_72 = s[3];
case 91:
s[2] = 92;
lix(s, Luntil(LnaturalNumbers, L__gt__, 100));
case 92:
_73 = s[3];
case 93:
s[2] = 94;
lix(s, Lreduce(_73, L__add__, 0));
case 94:
_74 = s[3];
case 95:
s[2] = 96;
lix(s, Lthen(_74, Lprint));
case 96:
_75 = s[3];
case 97:
s[2] = 98;
lix(s, Lexec(_75));
case 98:
_76 = s[3];
case 99:
s[3] = Lconcat = (function (Larr, Lb) {
var Larguments = arguments
var _77;
function _140(s) {
var Lraise = raise(s);
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, (function (_141, _142) {
if (typeof _141.Push === 'function') {
arguments = Array.prototype.slice.call(arguments, 0, arguments.length);
return _141.Push.apply(_141, arguments);
} else if (_141.Push !== undefined) {
if (_142 === undefined) {
return function (_ret) {
return _141.Push;
}
}
return function (_ret) {
_141.Push = _142;
}
}})(Larr, Lb));
case 1:
_77 = s[3];
case 2:
s[3] = Larr
default:
}
return s[3]
}
;
return _140;
});
case 100:
s[2] = 101;
lix(s, Luntil(LnaturalNumbers, L__gt__, 5));
case 101:
_78 = s[3];
case 102:
s[2] = 103;
lix(s, Lreduce(_78, Lconcat, []));
case 103:
_79 = s[3];
case 104:
s[2] = 105;
lix(s, Lthen(_79, Lprint));
case 105:
_80 = s[3];
case 106:
s[2] = 107;
lix(s, Lexec(_80));
case 107:
_81 = s[3];
case 108:
s[2] = 109;
lix(s, Lprint('end'));
case 109:
_82 = s[3]
default:
}
return s[3]
}
;
module.exports = _83
