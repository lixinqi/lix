
require('/lib/lix/__builtin__.js');
var LdeferList, _ret, _1, _3, _5, _6, _7, _8;
function _9(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = LdeferList = [];
case 1:
_ret = (function (_10, _11) {
if (typeof _10.Push === 'function') {
arguments = Array.prototype.slice.call(arguments, 0, arguments.length);
return _10.Push.apply(_10, arguments);
} else if (_10.Push !== undefined) {
if (_11 === undefined) {
return function (_ret) {
return _10.Push;
}
}
return function (_ret) {
_10.Push = _11;
}
}})(LdeferList, (function () {
var Larguments = arguments;
var _ret, _0;
function _14(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lprint('nice')(function (_ret) {
return _14(_cb, 1, true, _ret);
}, 0);
case 1:
_0 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _14;
}))(function (_ret) {
return _9(_cb, 2, true, _ret);
}, 0);
case 2:
_1 = _ret;
case 3:
_ret = (function (_15, _16) {
if (typeof _15.Push === 'function') {
arguments = Array.prototype.slice.call(arguments, 0, arguments.length);
return _15.Push.apply(_15, arguments);
} else if (_15.Push !== undefined) {
if (_16 === undefined) {
return function (_ret) {
return _15.Push;
}
}
return function (_ret) {
_15.Push = _16;
}
}})(LdeferList, (function () {
var Larguments = arguments;
var _ret, _2;
function _19(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lprint('good')(function (_ret) {
return _19(_cb, 1, true, _ret);
}, 0);
case 1:
_2 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _19;
}))(function (_ret) {
return _9(_cb, 4, true, _ret);
}, 0);
case 4:
_3 = _ret;
case 5:
_ret = (function (_20, _21) {
if (typeof _20.Push === 'function') {
arguments = Array.prototype.slice.call(arguments, 0, arguments.length);
return _20.Push.apply(_20, arguments);
} else if (_20.Push !== undefined) {
if (_21 === undefined) {
return function (_ret) {
return _20.Push;
}
}
return function (_ret) {
_20.Push = _21;
}
}})(LdeferList, (function () {
var Larguments = arguments;
var _ret, _4;
function _24(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lprint('OK')(function (_ret) {
return _24(_cb, 1, true, _ret);
}, 0);
case 1:
_4 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
return _24;
}))(function (_ret) {
return _9(_cb, 6, true, _ret);
}, 0);
case 6:
_5 = _ret;
case 7:
_ret = L__add__("defer", "-lix")(function (_ret) {
return _9(_cb, 8, true, _ret);
}, 0);
case 8:
_6 = _ret;
case 9:
_ret = _require(require)(_6)(function (_ret) {
return _9(_cb, 10, true, _ret);
}, 0);
case 10:
_7 = _ret;
case 11:
_ret = _7(LdeferList)(function (_ret) {
return _9(_cb, 12, true, _ret);
}, 0);
case 12:
_8 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
module.exports = _9
