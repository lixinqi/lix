
require('/lib/lix/__builtin__.js');
var _ret, _0, _1, Li, _2, _3, _4;
function _7(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = Lprint(Li)(function (_ret) {
return _7(_cb, 1, true, _ret);
}, 0);
case 1:
_3 = _ret;
case 2:
_ret = L__add__(Li, 1)(function (_ret) {
return _7(_cb, 3, true, _ret);
}, 0);
case 3:
_4 = _ret;
case 4:
_ret = Li = _4;
case 5:
_ret = L__lt__(Li, 5)(function (_ret) {
return _7(_cb, 6, true, _ret);
}, 0);
case 6:
_2 = _ret
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
function _6(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_0 = false;
case 1:
_ret = Li = 0;
case 2:
_ret = L__lt__(Li, 5)(function (_ret) {
return _6(_cb, 3, true, _ret);
}, 0);
case 3:
_2 = _ret;
case 4:
while (_2) {
_7(function (_ret) {
return _6(_cb, 4, true, _ret);
}, 0)
};
case 5:
_ret = _1 = undefined
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
function _5(_cb, _step, _cont, _ret) {
switch (_step) {
case 0:
_ret = true;
case 1:
_0 = _ret;
case 2:
_ret = null;
case 3:
_1 = _ret;
case 4:
if ((_0 && 1)) {
_6(function (_ret) {
return _5(_cb, 5, true, _ret);
}, 0)
}
default:
}
if (_cont) {
_cb(_ret)
} else {
return _ret
}
};
module.exports = _5
