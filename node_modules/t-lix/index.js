
require('/lib/lix/__builtin__.js');
var defer_stack = [];
var this_defer = thisDefer(defer_stack);
var chain_defer = chainDefer(defer_stack, function () {return;});
var _ret, _1, _2;
function _3(_cb, _step, _cont, _ret, cb_defer) {
switch (_step) {
case 0:
_ret = Lcall(Lcc, (function (Lcontinue) {
var Larguments = arguments;
var defer_stack = [];
var this_defer = thisDefer(defer_stack);
var chain_defer = chainDefer(defer_stack, cb_defer);
var _ret, _0;
function _5(_cb, _step, _cont, _ret, cb_defer) {
switch (_step) {
case 0:
_ret = Lcall(Lcontinue)(function (_ret) {
return _5(_cb, 1, true, _ret, chain_defer);
}, 0);
case 1:
_0 = _ret
default:
}
if (_cont) {
this_defer();
_cb(_ret);
} else {
this_defer();
return _ret;
}
};
return _5;
}))(function (_ret) {
return _3(_cb, 1, true, _ret, chain_defer);
}, 0);
case 1:
_1 = _ret;
case 2:
_ret = Lprint('good')(function (_ret) {
return _3(_cb, 3, true, _ret, chain_defer);
}, 0);
case 3:
_2 = _ret
default:
}
if (_cont) {
this_defer();
_cb(_ret);
} else {
this_defer();
return _ret;
}
};
module.exports = _3
