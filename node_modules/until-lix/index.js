
require('/lib/lix/s_builtin_.js');
;
function _10(s) {
switch (s[2]) {
case 0:
s[3] = (function (Lmonad) {
var Larguments = arguments
var _0, _1, _2, Lfn;
function _12(s) {
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, L__add__("minorArgs2Fn", "-lix"));
case 1:
_0 = s[3];
case 2:
s[2] = 3;
lix(s, _require(require)(_0));
case 3:
_1 = s[3];
case 4:
s[2] = 5;
lix(s, _1(Larguments));
case 5:
_2 = s[3];
case 6:
s[3] = Lfn = _2;
case 7:
s[3] = (function (Lcb) {
var Larguments = arguments
var _9;
function _14(s) {
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lcall(Lcc, (function (Lbrk) {
var Larguments = arguments
var _7, _8;
function _16(s) {
switch (s[2]) {
case 0:
s[2] = 1;
lix(s, Lcall(Lmonad, (function (Lx) {
var Larguments = arguments
var _3, _5, _4, _6;
function _19(s) {
switch (s[2]) {
case 0:
_3 = false;
case 1:
s[2] = 2;
lix(s, Lcall(Lbrk));
case 2:
_4 = s[3]
default:
}
return s[3]
}
;
function _18(s) {
switch (s[2]) {
case 0:
_3 = true;
case 1:
s[2] = 2;
lix(s, Lfn(Lx));
case 2:
_5 = s[3];
case 3:
if ((_3 && _5)) {
s[2] = 4;
lix(s, _19)
};
case 4:
s[2] = 5;
lix(s, Lcb(Lx));
case 5:
_6 = s[3]
default:
}
return s[3]
}
;
return _18;
})));
case 1:
_7 = s[3];
case 2:
s[2] = 3;
lix(s, Lcall(Lbrk));
case 3:
_8 = s[3]
default:
}
return s[3]
}
;
return _16;
})));
case 1:
_9 = s[3]
default:
}
return s[3]
}
;
return _14;
})
default:
}
return s[3]
}
;
return _12;
})
default:
}
return s[3]
}
;
module.exports = _10
